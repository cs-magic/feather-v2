import { IRoomMsg, SocketEvent } from "@/ds/socket"
import { Socket, connect } from "socket.io-client"

import { SOCKET_IO_ENDPOINT } from "@/config/site"

let socket: Socket

export const getSocket = new Promise<Socket>((resolve, reject) => {
  if (socket && socket.connected) return resolve(socket)

  socket = connect({
    path: SOCKET_IO_ENDPOINT,
  })
  socket.on("connect_error", (err) => {
    console.error(`connect_error`, err)
    reject()
  })

  socket.on("connect", () => {
    console.log("SOCKET CONNECTED!!! ", socket.id)
    resolve(socket)
  })
  return socket
})

export const disconnectSocket = () => {
  console.log("Disconnecting socket...")
  if (socket) socket.disconnect()
}

export const sendMessage = async (event: SocketEvent, msg: IRoomMsg) => {
  ;(await getSocket).emit(event, msg)
}
